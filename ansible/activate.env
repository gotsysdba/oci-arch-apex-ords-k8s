#!/bin/bash
#
# Copyright (c) 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
#

SCRIPT_PATH="$( cd -- "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 ; pwd -P )"
VENV_PATH=${1:-$SCRIPT_PATH}
ORIG_IFS=$IFS

if ! (return 0 2>/dev/null); then
  echo "ERROR: This script must be sourced" && return 1
fi

echo "INFO: Looking for Python Virtual Env in $VENV_PATH"
if [[ ! -f ${VENV_PATH}/.venv/bin/activate ]]; then
  echo "ERROR: Ansible Virtual Environment not created, run ./setup_ansible.sh [<path>]" && return 1
else
  echo "INFO: Activating Python Virtual Environment"
  source ${VENV_PATH}/.venv/bin/activate
fi

if [[ ! -f ${SCRIPT_PATH}/roles/common/vars/main.yaml ]]; then
  echo "INFO: Infrastructure is not defined (yet) or not a cloud installation"
  unset KUBECONFIG
  unset K8S_AUTH_PROXY
  unset K8S_AUTH_NO_PROXY
  unset DOCKER_REGISTRY
else
  echo "Setting OCI_CLI values"
  IFS=${IFS##?}
  for line in $(cat ${SCRIPT_PATH}/roles/common/vars/main.yaml); do
    key=${line%%:*}; val=${line#*: }
    if [[ ${key//\"/} =~ OCI_CLI_* ]]; then
      eval export ${key//\"/}=${val//\"/} 2>/dev/null
    fi
  done

  if [[ -f ${SCRIPT_PATH}/../terraform/oci/private_key.pem ]]; then
    echo "Setting OCI_CLI_KEY_FILE"
    export OCI_CLI_KEY_FILE=${SCRIPT_PATH}/../terraform/oci/private_key.pem
  elif [[ -f ${SCRIPT_PATH}/../private_key.pem ]]; then
    echo "Setting OCI_CLI_KEY_FILE"
    export OCI_CLI_KEY_FILE=${SCRIPT_PATH}/../private_key.pem
  else
    echo "Unable to find OCI_CLI_KEY_FILE file: private_key.pem"
  fi

  IFS=$ORIG_IFS
  export KUBECONFIG=${SCRIPT_PATH}/roles/kubernetes/files/kubeconfig

  echo "Setting K8s values"
  IFS=${IFS##?}
  for line in $(cat ${SCRIPT_PATH}/roles/common/vars/main.yaml); do
    key=${line%%:*}; val=${line#*: }
    if [[ ${key//\"/} == "common_proxy_uri" ]]; then
      export K8S_AUTH_PROXY=${val//\"/} 2>/dev/null
    fi
    if [[ ${key//\"/} == "common_no_proxy" ]]; then
      export K8S_AUTH_NO_PROXY=${val//\"/} 2>/dev/null
    fi
  done
  IFS=$ORIG_IFS

  if [[ -f ${SCRIPT_PATH}/roles/registry/vars/main.yaml ]]; then
    echo "Setting Registry values"
    IFS=${IFS##?}
    for line in $(cat ${SCRIPT_PATH}/roles/registry/vars/main.yaml); do
      key=${line%%:*}; val=${line#*: }
      if [[ ${key//\"/} == "registry_url" ]]; then
        export DOCKER_REGISTRY=${val//\"/} 2>/dev/null
      fi
    done
    IFS=$ORIG_IFS
  fi
fi

CWD=$(pwd)
if [[ -d ${CWD}/stage ]]; then
  export PATH=${CWD}/stage/kubectl:${CWD}/stage/maven/bin:${CWD}/stage/helm:$PATH
elif [[ -d ${CWD}/ansible/stage ]]; then
  export PATH=${CWD}/ansible/stage/kubectl:${CWD}/ansible/stage/maven/bin:${CWD}/ansible/stage/helm:$PATH
fi
